#!/bin/bash
#
# Copyright (c) 2015-2018 Vasilios E. Raptis <polyana.software@gmail.com>
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.
#
#-----------------------------------------------------------------------
#
if [[ -z $1 ]] || [ $1 = "h" ] || [ $1 = "-h" ] 
then
    echo -e "\v\tUsage"
    echo -e "\v\tAssuming that an executable (polyana) is placed in the test directory, then:\n"
    echo -e "\n\t*\t./run md \n\t\t to run a set of clean MD simulations from the beginning"
    echo -e "\n\t*\t./run polyana \n\t\t to run polyana in each directory"
    echo -e "\n\t*\t./run md polyana \n\t\t\tor\n\t\t./run polyana md "
    echo -e "\t\t to run a clean MD and then polyana"
    echo -e "\n\t*\t./run \n\t\t\tor \n\t\t./run h \n\t\t\tor \n\t\t./run -h \n\t\tto print this help screen"
    echo -e "\v\tOnce MD has been completed you can run polyana as many times as you want"
    echo -e "\tYou can also run polyana individually in each separate test directory\v"
    exit 0
fi

# Variables; modify DLPOLY if need be
ROOT=$PWD
EXE=$ROOT/polyana
DLPOLY="DLPOLY.X"

sleep 1
echo -e "\v\v"
echo -e "\tSeven test cases are about to be analysed"
if [ "$1" = "md" ] || [ "$2" = "md" ] 
then
    echo -e "\tEach DL_POLY run will last no more than about 5 minutes"
    echo "\t(except the last one that may take up to half an hour approx.)"
fi
echo -e "\v\tEach polyana run will last only a few seconds to minutes"
echo -e "\tA progress bar will be showing the elapsed time"
echo -e "\tIn it, each # will denote approx. 1 s, each #-block will be about 10 s"
echo -e "\v\tPress any key or wait a few seconds to continue\v\v\v\v\v"
read -t 10 -s -n 1 

for testdir in `ls -d test*`
do
    cd $testdir
    echo -e "\v\tTEST CASE: "`basename "$PWD"`
    sleep 1
    if [ "$1" = "md" ] || [ "$2" = "md" ] 
    then
        rm -f HISTORY polyana.out OUTPUT POP RDF RDFDAT REVCON REVIVE \
              STATIS STDOUT ZDEN ZDNDAT TABLE CG_FIELD CG_CONFIG
        "$DLPOLY" &
        echo -e "\tDL_POLY running..."
        sleep 1
        
        t=0
        m=0
        printf "\n\t"
        while [[ `lsof "$PWD/OUTPUT" 2> /dev/null` ]]  
        do
            if [ "$t" -eq 10 ] 
            then
                t=0
                printf " "
                ((m++))
                if [ "$m" -eq 6 ]
                then
                    m=0
                    p=`$PWD/../progress`
                    printf " $p%%\n\t"
                fi
            fi
            printf "#"
            sleep 1
            ((t++))
        done
        p=`$PWD/../progress`
        printf "$p%%\n"
        sleep 1
        echo -e "\v\tMD run completed"
        echo -e "\v\tReady to run polyana"
        sleep 1
    fi
    if [ "$1" = "polyana" ] || [ "$2" = "polyana" ] 
    then
        if [ ! -e $EXE ]
        then
            echo -e "\v\tNo executable (polyana) found!\n\tPlace it in the test directory and retry\v"
            exit 0
        fi
        if [ ! -e FIELD ] || [ ! -e HISTORY ] 
        then
            echo -e "\v\t polyana in " $testdir ": no FIELD or HISTORY found!"
        fi
        if [ ! -e CONTROL ]
        then
            echo -e "\v\tpolyana in " $testdir ": no CONTROL file found!"
            echo -e "\tCalculation will be carried out without directives"
        fi
        rm -f polyana.out RDF POP TABLE CG_FIELD CG_CONFIG
    	$EXE > polyana.out &
        echo -e "\tpolyana running..."
        sleep 1
        
        t=0
        m=0
        printf "\n\t"
        while [[ `lsof "$PWD/polyana.out" 2> /dev/null` ]]  
        do
            if [ "$t" -eq 10 ] 
            then
                t=0
                printf " "
                ((m++))
                if [ "$m" -eq 6 ]
                then
                    m=0
                    p=`$PWD/../progress`
                    printf " $p%%\n\t"
                fi
            fi
            printf "#"
            sleep 1
            ((t++))
        done
        p=`$PWD/../progress`
        printf "$p%%\n"
        sleep 1
        echo -e "\v\tPolyana run is over"
        echo -e "\tOutput is in file RDF.\n\tOutput messages are in file polyana.out\v"
    fi
    cd ..
    sleep 1
done
echo -e "\tAll tests are over. Thank you for trying polyana!\v"

